{"version":3,"sources":["src/game.js","src/index.js"],"names":["window","PegglePrime","stop","DEG_TO_RAD","Math","PI","movePoint","point","angle","magnitude","xOff","sin","yOff","cos","x","abs","y","dot","v1","v2","DEFAULT_STATE","lastTick","undefined","cannon","origin","length","muzzleVelocity","canMove","player","effects","balls","board","width","height","ballRadius","pieceRadius","gravity","configuration","pieceValues","GOAL","BONUS","POINT","POWER","pieces","type","isVisible","isHit","position","DEFAULT_ENGINE","playerActions","action","description","defaultMapping","apply","state","_this","name","payload","_state$cannon","min","_objectSpread","atan2","_state$cannon2","ball","velocity","concat","_toConsumableArray","_state$board","delta","bounds","bottom","left","right","hitIds","Set","map","updated","diff","_step","i","_iterator","_createForOfIteratorHelper","s","n","done","piece","value","collision","add","err","e","f","filter","size","has","console","log","oBall","_state$board2","r","dx","dy","v","mag","uv","sqrt","DEFAULT_RENDERER","running","lastState","init","initialState","engine","_this2","root","document","body","classList","toggle","innerHTML","autoAdjust","renderStyle","actionQueue","game","getState","dispatch","renderer","loop","pop","gameLoop","requestAnimationFrame","clock","render","push","worldToBrowser","_this$state$board","browserToWorld","_this$state$board2","_window","innerWidth","innerHeight","styleEl","getElementById","createElement","id","toFixed","trim","head","appendChild","renderBoard","_this3","querySelector","addEventListener","ev","_board$getBoundingCli","getBoundingClientRect","clientX","clientY","preventDefault","key","renderScore","renderPieces","renderCannon","renderBalls","pieceEls","Array","from","querySelectorAll","el","toLowerCase","off","pieceEl","idMatch","style","top","remove","barrel","rot","transform","ballEls","_this$state$cannon","len","max","ballEl","scoreEl","_this$state$board3","score","reduce","total","_ref","arguments","_ref$state","_ref$engine","_ref$renderer","require"],"mappings":"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","file":"src.58ae58af.js","sourceRoot":"..","sourcesContent":["(() => {\n  if (window.PegglePrime) {\n    window.PegglePrime.stop();\n  }\n\n  const DEG_TO_RAD = Math.PI / 180;\n\n  // angle is measured from -y axis\n  const movePoint = (point, angle, magnitude) => {\n    const xOff = magnitude * Math.sin(angle * DEG_TO_RAD);\n    const yOff = magnitude * Math.cos(angle * DEG_TO_RAD);\n    return {\n      x: point.x + (Math.abs(xOff) < 0.0001 ? 0 : xOff),\n      y: point.y - (Math.abs(yOff) < 0.0001 ? 0 : yOff)\n    };\n  };\n\n  function dot(v1, v2) {\n    return v1.x * v2.x + v1.y * v2.y;\n  }\n\n  function unit(v) {\n    const mag = Math.sqrt(v.x * v.x + v.y * v.y);\n    return {\n      x: v.x / mag,\n      y: v.y / mag\n    };\n  }\n\n  const DEFAULT_STATE = {\n    lastTick: undefined,\n    cannon: {\n      origin: {\n        x: 0,\n        y: 0 // determined in autoAdjust\n      },\n      length: 50,\n      angle: 0,\n      muzzleVelocity: 750,\n      canMove: true\n    },\n    player: {\n      effects: [],\n      balls: 10\n    },\n    board: {\n      width: 660,\n      height: 680,\n      ballRadius: 10,\n      pieceRadius: 14,\n      gravity: -900,\n      balls: [],\n      configuration: {\n        pieceValues: {\n          GOAL: 100,\n          BONUS: 1000,\n          POINT: 25,\n          POWER: 100\n        }\n      },\n      pieces: [\n        {\n          type: \"GOAL\",\n          isVisible: true,\n          isHit: false,\n          position: {\n            x: -100,\n            y: 0\n          }\n        },\n        {\n          type: \"POINT\",\n          isVisible: true,\n          isHit: false,\n          position: {\n            x: -50,\n            y: -50\n          }\n        },\n        {\n          type: \"BONUS\",\n          isVisible: true,\n          isHit: false,\n          position: {\n            x: 100,\n            y: 0\n          }\n        },\n        {\n          type: \"POWER\",\n          isVisible: true,\n          isHit: false,\n          position: {\n            x: 50,\n            y: -50\n          }\n        }\n      ]\n    }\n  };\n\n  const DEFAULT_ENGINE = {\n    playerActions: [\n      {\n        action: \"AIM\",\n        description: \"Adjust the direction the ball is launched\",\n        defaultMapping: \"MOUSE_MOVE\"\n      },\n      {\n        action: \"SHOOT\",\n        description: \"Launch the ball from the cannon\",\n        defaultMapping: \"MOUSE_LCLICK\"\n      },\n      {\n        action: \"TOGGLE_AIM\",\n        description: \"Toggle aiming movement\",\n        defaultMapping: \"MOUSE_RCLICK\"\n      }\n    ],\n    apply(state, action) {\n      const { name, payload } = action;\n      switch (name) {\n        case \"AIM\": {\n          const { canMove, origin } = state.cannon;\n\n          if (!canMove) {\n            return state;\n          }\n\n          const x = origin.x - payload.x;\n          const y = origin.y - Math.min(origin.y, payload.y);\n          return {\n            ...state,\n            cannon: {\n              ...state.cannon,\n              angle: Math.atan2(y, x) / DEG_TO_RAD - 90\n            }\n          };\n        }\n        case \"SHOOT\": {\n          if (!state.player.balls || state.board.balls.length) {\n            return state;\n          }\n\n          const { origin, angle, length, muzzleVelocity } = state.cannon;\n          const ball = {\n            position: {\n              ...movePoint(origin, angle, length)\n            },\n            velocity: {\n              ...movePoint({ x: 0, y: 0 }, angle, muzzleVelocity)\n            }\n          };\n          return {\n            ...state,\n            player: {\n              ...state.player\n              //                            balls: state.player.balls - 1\n            },\n            board: {\n              ...state.board,\n              balls: [...state.board.balls, ball]\n            }\n          };\n        }\n        case \"TOGGLE_AIM\": {\n          const { canMove } = state.cannon;\n          return {\n            ...state,\n            cannon: {\n              ...state.cannon,\n              canMove: !canMove\n            }\n          };\n        }\n        case \"TICK\": {\n          const { gravity, height, width, ballRadius, pieces } = state.board;\n          const { delta } = payload;\n          const bounds = {\n            bottom: -height / 2,\n            left: -width / 2,\n            right: width / 2\n          };\n          const hitIds = new Set();\n          const balls = state.board.balls\n            .map(ball => {\n              const updated = {\n                ...ball,\n                position: {\n                  x: ball.position.x + ball.velocity.x * delta,\n                  y:\n                    ball.position.y +\n                    ball.velocity.y * delta +\n                    gravity * 0.5 * delta * delta\n                },\n                velocity: {\n                  ...ball.velocity,\n                  y: ball.velocity.y + gravity * delta\n                }\n              };\n\n              // wall collision\n              if (updated.position.x - ballRadius < bounds.left) {\n                const diff = bounds.left - (updated.position.x - ballRadius);\n                updated.position.x = bounds.left + diff;\n                updated.velocity.x = -updated.velocity.x;\n              } else if (updated.position.x + ballRadius > bounds.right) {\n                const diff = updated.position.x + ballRadius - bounds.right;\n                updated.position.x = bounds.right - diff;\n                updated.velocity.x = -updated.velocity.x;\n              }\n\n              // piece collision\n              let i = -1;\n              for (let piece of pieces) {\n                i++;\n\n                if (!piece.isVisible) {\n                  continue;\n                }\n\n                const collision = this.collision(state, updated, piece, ball);\n                if (collision) {\n                  hitIds.add(i);\n                  updated.position = collision.position;\n                  updated.velocity = collision.velocity;\n                }\n              }\n\n              return updated;\n            })\n            .filter(ball => {\n              // out of bounds\n              if (ball.position.y + ballRadius < bounds.bottom) {\n                return false;\n              }\n              return true;\n            });\n\n          return {\n            ...state,\n            board: {\n              ...state.board,\n              balls,\n              pieces: hitIds.size\n                ? state.board.pieces.map((piece, i) => {\n                    if (hitIds.has(i)) {\n                      return {\n                        ...piece,\n                        isHit: true\n                      };\n                    }\n\n                    return piece;\n                  })\n                : state.board.pieces\n            }\n          };\n        }\n        default: {\n          console.log(\"Unknown action\", { name, payload });\n          return state;\n        }\n      }\n    },\n    collision(state, ball, piece, oBall, delta) {\n      const { ballRadius, pieceRadius, gravity } = state.board;\n      const r = ballRadius + pieceRadius;\n      const dx = ball.position.x - piece.position.x;\n      const dy = ball.position.y - piece.position.y;\n      if (dx * dx + dy * dy > r * r) {\n        return null;\n      }\n\n      const uv = unit({\n        x: (dx * ballRadius) / r - piece.position.x,\n        y: (dy * ballRadius) / r - piece.position.y\n      });\n\n      return {\n        position: {\n          x: ball.position.x + uv.x * pieceRadius,\n          y: ball.position.y + uv.y * pieceRadius\n        },\n        velocity: {\n          x: (ball.velocity.x - 2 * uv.x * dot(ball.velocity, uv)) * 0.9,\n          y: (ball.velocity.y - 2 * uv.y * dot(ball.velocity, uv)) * 0.9\n        }\n      };\n    }\n  };\n\n  const DEFAULT_RENDERER = {\n    running: false,\n    lastState: {},\n    init(initialState, engine) {\n      const root = window.document.body;\n      root.classList.toggle(\"game-window\", true);\n      root.innerHTML = \"\";\n\n      this.state = initialState;\n      this.autoAdjust();\n      this.renderStyle();\n      this.actionQueue = [];\n\n      const game = {\n        stop: () => this.stop(),\n        getState: () => this.state,\n        dispatch: action => this.dispatch(action),\n        engine,\n        renderer: this\n      };\n\n      const loop = () => {\n        if (!this.running) {\n          return;\n        }\n\n        this.lastState = this.state;\n\n        while (this.actionQueue.length) {\n          this.state = engine.apply(this.state, this.actionQueue.pop());\n        }\n\n        this.gameLoop = window.requestAnimationFrame(clock => {\n          this.state = engine.apply(this.state, {\n            name: \"TICK\",\n            payload: {\n              delta: (clock - (this.lastTick || clock)) / 1000\n            }\n          });\n          this.lastTick = clock;\n          this.render(root);\n          loop();\n        });\n      };\n\n      this.running = true;\n      loop();\n\n      return game;\n    },\n    dispatch(action) {\n      this.actionQueue.push(action);\n    },\n    stop() {\n      this.running = false;\n    },\n    worldToBrowser(point) {\n      const { width, height } = this.state.board;\n      return {\n        x: width / 2 + point.x,\n        y: height / 2 - point.y\n      };\n    },\n    browserToWorld(point) {\n      const { width, height } = this.state.board;\n      return {\n        x: point.x - width / 2,\n        y: height / 2 - point.y\n      };\n    },\n    autoAdjust() {\n      const { innerWidth, innerHeight } = window;\n      const width = innerWidth - 40;\n      const height = innerHeight - 40;\n\n      this.state = {\n        ...this.state,\n        board: {\n          ...this.state.board,\n          width,\n          height\n        },\n        cannon: {\n          ...this.state.cannon,\n          origin: {\n            ...this.state.cannon.origin,\n            y: height / 2 - 5\n          }\n        }\n      };\n    },\n    renderStyle() {\n      const { state } = this;\n      const styleEl =\n        document.getElementById(\"pp-style\") || document.createElement(\"style\");\n      styleEl.id = \"pp-style\";\n      styleEl.innerHTML = `\nhtml,\n.game-window {\n  box-sizing: border-box;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  background: aliceblue;\n  position: relative;\n  overflow: hidden;\n}\n\n.board {\n  position: relative;\n  width: ${state.board.width}px;\n  height: ${state.board.height}px;\n  margin: 20px;\n  background: lightcoral;\n  overflow: hidden;\n  border-radius: 10px;\n}\n\n.score {\n  position: absolute;\n  display: inline-block;\n  right: 20px;\n  top: 5px;\n  color: white;\n  font-family: 'Helvetica Neue', Helvetica;\n  font-weight: bold;\n  font-size: 24pt;\n}\n\n.cannon {\n  position: relative;\n  background: purple;\n  height: ${state.board.ballRadius * 8}px;\n  width: ${state.board.ballRadius * 8}px;\n  margin-top: ${-state.board.ballRadius * 4}px;\n  margin-left: ${-state.board.ballRadius * 4}px;\n  border-radius: 50%;\n}\n\n.cannon__barrel {\n  position: absolute;\n  background: black;\n  width: ${state.board.ballRadius * 2}px;\n  height: ${state.cannon.length}px;\n  top: 50%;\n  left: calc(50% - ${state.board.ballRadius}px);\n  border-radius: ${state.board.ballRadius}px;\n}\n\n.ball {\n  position: absolute;\n  box-sizing: border-box;\n  width: ${state.board.ballRadius * 2}px;\n  height: ${state.board.ballRadius * 2}px;\n  margin-left: ${-state.board.ballRadius}px;\n  margin-top: ${-state.board.ballRadius}px;\n  border-radius: 50%;\n  background: grey;\n}\n\n.piece {\n  position: absolute;\n  box-sizing: border-box;\n  width: ${state.board.pieceRadius * 2}px;\n  height: ${state.board.pieceRadius * 2}px;\n  margin-left: ${-state.board.pieceRadius}px;\n  margin-top: ${-state.board.pieceRadius}px;\n  border-radius: 50%;\n  border: ${(state.board.pieceRadius * 0.2).toFixed(0)}px solid transparent;\n}\n\n.piece--point {\n  background-color: aqua;\n  border-color: turquoise;\n}\n\n.piece--goal {\n  background-color: darkorange;\n  border-color: orange;\n}\n\n.piece--bonus {\n  background-color: blueviolet;\n  border-color: purple;\n}\n\n.piece--power {\n  background-color: limegreen;\n  border-color: green;\n}\n\n.piece--is-hit {\n  box-shadow: lightblue 0 0 5px 3px;\n}\n          `.trim();\n      document.head.appendChild(styleEl);\n    },\n    render(root) {\n      this.renderBoard(root);\n    },\n    renderBoard(root) {\n      let board = root.querySelector(\".board\");\n      if (!board) {\n        board = document.createElement(\"div\");\n        board.classList.add(\"board\");\n\n        board.addEventListener(\"mousemove\", ev => {\n          const { x, y } = board.getBoundingClientRect();\n          this.actionQueue.push({\n            name: \"AIM\",\n            payload: this.browserToWorld({\n              x: ev.clientX - x,\n              y: ev.clientY - y\n            })\n          });\n        });\n        board.addEventListener(\n          \"click\",\n          ev => {\n            this.dispatch({\n              name: \"SHOOT\"\n            });\n          },\n          true\n        );\n        root.addEventListener(\"keypress\", ev => {\n          ev.preventDefault();\n          if (ev.key === \"a\") {\n            this.dispatch({\n              name: \"TOGGLE_AIM\"\n            });\n          }\n        });\n        root.appendChild(board);\n      }\n\n      this.renderScore(board);\n      this.renderPieces(board);\n      this.renderCannon(board);\n      this.renderBalls(board);\n    },\n    renderPieces(root) {\n      const pieces = this.state.board.pieces;\n\n      let pieceEls = Array.from(root.querySelectorAll(\".piece\"));\n      if (!pieceEls.length) {\n        pieceEls = pieces.map((piece, i) => {\n          const el = document.createElement(\"div\");\n          el.id = `piece-${i}`;\n          el.classList.add(\"piece\");\n          el.classList.add(`piece--${piece.type.toLowerCase()}`);\n          root.appendChild(el);\n          return el;\n        });\n      }\n\n      for (let i = 0, off = 0; i < pieces.length; i++) {\n        const piece = pieces[i];\n        const pieceEl = pieceEls[i - off];\n        const idMatch = pieceEl.id === `piece-${i}`;\n\n        if (!piece.isVisible && idMatch) {\n          pieceEl.remove();\n          continue;\n        } else if (!idMatch) {\n          off++;\n          i--;\n          continue;\n        }\n\n        pieceEl.classList.toggle(\"piece--is-hit\", piece.isHit);\n\n        const position = this.worldToBrowser(piece.position);\n        pieceEl.style.left = `${position.x}px`;\n        pieceEl.style.top = `${position.y}px`;\n      }\n    },\n    renderCannon(root) {\n      let cannon = root.querySelector(\".cannon\");\n      if (!cannon) {\n        cannon = document.createElement(\"div\");\n        cannon.classList.add(\"cannon\");\n\n        const position = this.worldToBrowser(this.state.cannon.origin);\n        cannon.style.left = `${position.x}px`;\n        cannon.style.top = `${position.y}px`;\n\n        const barrel = document.createElement(\"div\");\n        barrel.classList.add(\"cannon__barrel\");\n        cannon.appendChild(barrel);\n        root.appendChild(cannon);\n      }\n\n      const rot = (-this.state.cannon.angle).toFixed(2);\n      cannon.style.transform = `rotate(${rot}deg)`;\n    },\n    renderBalls(root) {\n      let { balls } = this.state.board;\n      const ballEls = Array.from(root.querySelectorAll(\".ball\"));\n\n      // ball on cannon\n      if (!balls.length && this.state.player.balls > 0) {\n        const { length, angle, origin } = this.state.cannon;\n        balls = [\n          {\n            position: {\n              ...movePoint(origin, angle, length)\n            }\n          }\n        ];\n      }\n\n      const len = Math.max(ballEls.length, balls.length);\n\n      for (let i = 0; i < len; i++) {\n        if (i >= balls.length) {\n          ballEls[i].remove();\n          continue;\n        }\n\n        const ballEl =\n          ballEls[i] ||\n          (() => {\n            const el = document.createElement(\"div\");\n            el.classList.add(\"ball\");\n            root.appendChild(el);\n            return el;\n          })();\n\n        const position = this.worldToBrowser(balls[i].position);\n        ballEl.style.left = `${position.x}px`;\n        ballEl.style.top = `${position.y}px`;\n      }\n    },\n    renderScore(root) {\n      let scoreEl = root.querySelector(\".score\");\n      if (!scoreEl) {\n        scoreEl = document.createElement(\"span\");\n        scoreEl.classList.add(\"score\");\n        root.appendChild(scoreEl);\n      }\n\n      const { configuration, pieces } = this.state.board;\n      if (!scoreEl.innerHTML || pieces !== this.lastState.board.pieces) {\n        const score = pieces.reduce((total, piece) => {\n          if (piece.isHit) {\n            return total + configuration.pieceValues[piece.type];\n          }\n          return total;\n        }, 0);\n\n        scoreEl.innerHTML = score;\n      }\n    }\n  };\n\n  window.PegglePrime = (({\n    /**\n     * The game state (resources, score, board)\n     */\n    state = DEFAULT_STATE,\n\n    /**\n     * playerActions: List({ action, description, defaultMapping })\n     * apply(state, action) => state\n     */\n    engine = DEFAULT_ENGINE,\n\n    /**\n     * init(state, engine) => Game\n     */\n    renderer = DEFAULT_RENDERER\n  } = {}) => {\n    return renderer.init(state, engine);\n  })();\n\n  console.log(window.PegglePrime);\n})();\n","import \"./game\";\n"]}